<ObservableRegion ViewModel="@this.SettingsViewModel">
    <div class="mx-3">
        <MudPaper Elevation="0" Class="p-2">
            <MudGrid Spacing="1">
                <MudItem xs="12">
                    <MudToolBar Dense="true" DisableGutters="true">
                        <MudText Typo="Typo.h5">Settings</MudText>
                        <MudIconButton Icon="@Icons.Material.Filled.Info" Color="Color.Info"
                                       OnClick="@(() => this.pathDisplayOpen = !this.pathDisplayOpen)"/>
                        <MudPaper Elevation="0">
                            <MudPopover Open="@this.pathDisplayOpen" AnchorOrigin="Origin.TopRight" Class="pa-4">
                                <MudText>@this.Config.AppSettingsPath</MudText>
                            </MudPopover>
                        </MudPaper>
                    </MudToolBar>
                </MudItem>
                <MudItem xs="12">
                    <MudToolBar Dense="true" DisableGutters="true">
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" IconColor="Color.Primary" Size="Size.Small" Class="mr-3"
                                   OnClick="@this.SettingsViewModel.OnSave">Save</MudButton>
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Primary" Size="Size.Small"
                                   OnClick="@this.OnAdd">Add</MudButton>
                    </MudToolBar>
                </MudItem>
                <MudItem xs="4">
                    <MudNumericField AdornmentIcon="@Icons.Material.Filled.Timer" Adornment="Adornment.Start"
                                     Label="Default Interval"
                                     Variant="Variant.Outlined" Min="0" FullWidth="false"
                                     @bind-Value="this.SettingsViewModel.DefaultInterval"/>
                </MudItem>
                <MudItem xs="12">
                    <MudDataGrid T="ILoopItem" Items="@this.SettingsViewModel.LoopItems.OrderBy(i => i.Order)" Dense=true Bordered=true
                                 ColumnResizeMode="ResizeMode.Column">
                        <ColGroup>
                            <col style="width: 20px;" />
                            <col style="width: 20px;" />
                            <col style="width: 40px;" />
                            <col style="width: 50px;" />
                            <col />
                            <col style="width: 20px;" />
                        </ColGroup>
                        <Columns>
                            <Column T="ILoopItem" CellClass="justify-start">
                                <CellTemplate>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.ArrowDropUp" Color="Color.Primary" 
                                                   OnClick="@(() => this.SettingsViewModel.OnMoveUp(context.Item))" 
                                                   Disabled=@(!context.Item.CanMoveUp(this.SettingsViewModel.LoopItems))/>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.ArrowDropDown" Color="Color.Primary"
                                                   OnClick="@(() => this.SettingsViewModel.OnMoveDown(context.Item))"
                                                   Disabled=@(!context.Item.CanMoveDown(this.SettingsViewModel.LoopItems)) />
                                </CellTemplate>
                            </Column>
                            <Column T="ILoopItem" CellClass="justify-start">
                                <CellTemplate>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" Color="Color.Primary"
                                                   OnClick="@(() => this.OnEdit(context.Item))" />
                                </CellTemplate>
                            </Column>
                            <Column T="ILoopItem" Title="Order" Field="@nameof(ILoopItem.Order)" />
                            <Column T="ILoopItem" Title="Type" Field="@nameof(ILoopItem.Type)" />
                            <Column T="ILoopItem" Title="Path (Text Value)" Field="@nameof(ILoopItem.Path)" />
                            <Column T="ILoopItem" CellClass="justify-end">
                                <CellTemplate>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Delete" Color="Color.Error" OnClick="@(() => this.OnDelete(context.Item))" />
                                </CellTemplate>
                            </Column>
                        </Columns>
                    </MudDataGrid>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </div>
</ObservableRegion>